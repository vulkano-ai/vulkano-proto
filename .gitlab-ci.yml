stages:
  - release
  - publish

variables:
  PROTOC_VERSION: "3.14.0"
  PROTOC_ZIP: protoc-${PROTOC_VERSION}-linux-x86_32.zip


release:
  stage: release
  script:
    - npm i
    - npm run semantic-release
  only:
    - main
    - dev


publish-npm:
  image: node:18
  stage: publish
  variables:
    NPM_TOKEN: ${GL_TOKEN}
    VERSION: ${CI_COMMIT_TAG}
    NPM_REGISTRY: "@inference:registry"
  before_script:
    - apt-get update
    - apt-get install -y protobuf-compiler make gettext-base
  script:
    - make init-node
    - make node
    - envsubst < package.json | tee package.json
    - npm publish

  artifacts:
    paths:
      - src/*
      - lib/*
  only:
    - tags



publish-python:
    image: python:3.9
    stage: publish
    before_script:
        - apt-get update
        - apt-get install -y protobuf-compiler make gettext-base
    script:
        - make init-python
        - make python
        - pip install build twine
        - export VERSION=${CI_COMMIT_TAG} && cat setup.py | envsubst > src/py/setup.py
        - cp README.md src/py/README.md
        - cp setup.cfg src/py/setup.cfg
        - cd src/py/
        - python -m build
        - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
    artifacts:
        paths:
        - src/*
        - lib/*
    only:
        - tags
